{"ast":null,"code":"// src/utils/loggerUtils.js\nconst formatTime = () => new Date().toLocaleString();\nexport const logEvent = (message, data = {}) => {\n  try {\n    const logEntry = {\n      id: Date.now() + Math.random().toString(36).substr(2, 5),\n      timestamp: formatTime(),\n      message,\n      details: data\n    };\n    const existingLogs = JSON.parse(localStorage.getItem(\"logs\")) || [];\n    existingLogs.push(logEntry);\n    const trimmedLogs = existingLogs.slice(-50);\n    localStorage.setItem(\"logs\", JSON.stringify(trimmedLogs));\n  } catch (error) {\n    console.error(\"Failed to log event:\", error);\n  }\n};","map":{"version":3,"names":["formatTime","Date","toLocaleString","logEvent","message","data","logEntry","id","now","Math","random","toString","substr","timestamp","details","existingLogs","JSON","parse","localStorage","getItem","push","trimmedLogs","slice","setItem","stringify","error","console"],"sources":["C:/Users/Komal Misra/Desktop/React URL Shortener/src/components/logger.js"],"sourcesContent":["// src/utils/loggerUtils.js\nconst formatTime = () => new Date().toLocaleString();\n\nexport const logEvent = (message, data = {}) => {\n  try {\n    const logEntry = {\n      id: Date.now() + Math.random().toString(36).substr(2, 5),\n      timestamp: formatTime(),\n      message,\n      details: data,\n    };\n\n    const existingLogs = JSON.parse(localStorage.getItem(\"logs\")) || [];\n    existingLogs.push(logEntry);\n    const trimmedLogs = existingLogs.slice(-50);\n    localStorage.setItem(\"logs\", JSON.stringify(trimmedLogs));\n  } catch (error) {\n    console.error(\"Failed to log event:\", error);\n  }\n};\n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAGA,CAAA,KAAM,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;AAEpD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAEN,IAAI,CAACO,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACxDC,SAAS,EAAEb,UAAU,CAAC,CAAC;MACvBI,OAAO;MACPU,OAAO,EAAET;IACX,CAAC;IAED,MAAMU,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IACnEJ,YAAY,CAACK,IAAI,CAACd,QAAQ,CAAC;IAC3B,MAAMe,WAAW,GAAGN,YAAY,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC;IAC3CJ,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACH,WAAW,CAAC,CAAC;EAC3D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}